@model List<BulBike.Web.Models.TripViewModels.TripResponseModel>

<div class="container">
    <div>
        <div class="row">
            <div>
                <h1 class="col m12 center">List all trips</h1>
            </div>
        </div>
        <div class="row">
            <div class="col m4 center">
                Filter by date
            </div>
            <div class="col m4 center">
                Sort by creator
            </div>
            <div class="col m4 center">
                Filter by page
            </div>
        </div>
    </div>
    <br />
</div>

<table class="centered striped">
    <thead>
        <tr>
            <th data-field="id">Creator</th>
            <th data-field="name">Created On</th>
            <th data-field="price">Start Point</th>
            <th data-field="price">Route</th>
        </tr>
    </thead>

    <tbody>

        @for (int i = 0; i < Model.Count; i++)
        {

            var trip = Model[i];
            var test = trip.Participants.Select(x => x.Username).ToList();
            var mapId = "map" + i;

        <tr>
            <td width="20%">@trip.Creator</td>
            <td width="25%">@trip.CreatedOn</td>
            <td width="25%">@trip.StartPoint</td>
            <td width="30%">
                <div id=@mapId class="allMapsList"></div>
            </td>
        </tr>
        }
    </tbody>
</table>

<div class="container">
    <div class="row">
        <div class="col m12 offset-m3">
            <ul class="pagination">
                <li class="disabled"><a href="#!"><i class="material-icons">chevron_left</i></a></li>
                <li class="active"><a href="#!">1</a></li>
                <li class="waves-effect"><a href="#!">2</a></li>
                <li class="waves-effect"><a href="#!">3</a></li>
                <li class="waves-effect"><a href="#!">4</a></li>
                <li class="waves-effect"><a href="#!">5</a></li>
                <li class="waves-effect"><a href="#!"><i class="material-icons">chevron_right</i></a></li>
            </ul>
        </div>
    </div>
</div>

@section scripts{
    <script>
        function initMap() {
            var styledMap,
                styles,
                mapOptions;

            styles = [
{
    "featureType": "administrative",
    "elementType": "geometry.fill",
    "stylers": [{ "color": "#7f2200" }, { "visibility": "off" }]
},
{
    "featureType": "administrative",
    "elementType": "geometry.stroke",
    "stylers": [{ "visibility": "on" }, { "color": "#87ae79" }]
},
{
    "featureType": "administrative",
    "elementType": "labels.text.fill",
    "stylers": [{ "color": "#495421" }]
},
{
    "featureType": "administrative",
    "elementType": "labels.text.stroke",
    "stylers": [{ "color": "#ffffff" }, { "visibility": "on" }, { "weight": 4.1 }]
},
{
    "featureType": "administrative.province",
    "elementType": "labels.text",
    "stylers": [{ "visibility": "simplified" }]
},
{
    "featureType": "administrative.locality",
    "elementType": "labels",
    "stylers": [{ "visibility": "on" }]
},
{
    "featureType": "administrative.neighborhood",
    "elementType": "labels",
    "stylers": [{ "visibility": "off" }]
},
{
    "featureType": "landscape",
    "elementType": "geometry.fill",
    "stylers": [{ "color": "#abce83" }]
},
{
    "featureType": "poi",
    "elementType": "geometry.fill",
    "stylers": [{ "color": "#769E72" }]
},
{
    "featureType": "poi",
    "elementType": "labels.text.fill",
    "stylers": [{ "color": "#7B8758" }]
},
{
    "featureType": "poi",
    "elementType": "labels.text.stroke",
    "stylers": [{ "color": "#EBF4A4" }]
},
{
    "featureType": "poi.park",
    "elementType": "geometry",
    "stylers": [{ "visibility": "simplified" }, { "color": "#8dab68" }]
},
{
    "featureType": "road",
    "elementType": "geometry.fill",
    "stylers": [{ "visibility": "simplified" }]
},
{
    "featureType": "road",
    "elementType": "labels.text.fill",
    "stylers": [{ "color": "#5B5B3F" }]
},
{
    "featureType": "road",
    "elementType": "labels.text.stroke",
    "stylers": [{ "color": "#ABCE83" }]
},
{
    "featureType": "road", "elementType":
      "labels.icon", "stylers": [{ "visibility": "off" }]
},
{
    "featureType": "road.highway",
    "elementType": "geometry", "stylers": [{ "color": "#EBF4A4" }]
},
{
    "featureType": "road.highway",
    "elementType": "geometry.stroke", "stylers": [{ "visibility": "off" }]
},
{
    "featureType": "road.arterial",
    "elementType": "geometry", "stylers": [{ "color": "#9BBF72" }]
},
{
    "featureType": "road.local",
    "elementType": "geometry", "stylers": [{ "color": "#A4C67D" }]
},
{
    "featureType": "transit",
    "elementType": "all", "stylers": [{ "visibility": "on" }]
},
{
    "featureType": "water",
    "elementType": "geometry",
    "stylers": [{ "visibility": "on" }, { "color": "#aee2e0" }]
},
{
    "featureType": "water",
    "elementType": "labels",
    "stylers": [{ "visibility": "on" }]
}];

            styledMap = new google.maps.StyledMapType(styles, { name: "RoutExtreme" });

            var url = document.URL;
            var id = url.substring(url.lastIndexOf('/') + 1);
            var trips;

            var test = @Html.Raw(Json.Encode(Model));
            console.log(test)

            for (var i = 0,len = test.length; i < len; i++) {

                var trips = test[i].Route;

                var id = 'map' + (i);
                console.log(id);
                var map = new google.maps.Map(document.getElementById(id), {
                    zoom: 10,
                    center: { lat: trips[0].lat, lng: trips[0].lng },
                    mapTypeControlOptions: {
                        mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
                    }
                });


                var flightPath = new google.maps.Polyline({
                    path: trips,
                    geodesic: true,
                    strokeColor: '#FF0000',
                    strokeOpacity: 1.0,
                    strokeWeight: 2
                });

                map.mapTypes.set('map_style', styledMap);
                flightPath.setMap(map);
            }
        }
    </script>
    @Scripts.Render("https://maps.googleapis.com/maps/api/js?key=AIzaSyA0EBUP2Baj7_5yrdf3hoQ4xXf86EaoPIU&callback=initMap")
}