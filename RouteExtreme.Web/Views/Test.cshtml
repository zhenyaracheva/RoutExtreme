@*@using PagedList;

@using PagedList.Mvc;

@model IPagedList < SearchSortPaging.Models.Student > < link href = "~/Content/PagedList.css"rel = "stylesheet" / >
@ {
    ViewBag.Title = "Index";
}
@using (Html.BeginForm("Index", "Home", FormMethod.Get))
{
    <b> Search Option: </b>
    @Html.RadioButton("option", "Name") <text>Name</text>
    Html.RadioButton("option", "Gender") <text > Gender </text>
    @Html.RadioButton("option", "Subjects")<text>Subject</text>
    @Html.TextBox("search") <input type = "submit"    name = "submit"     value = "Search" />
    }
    <table class="table" border="1">
        <tr>
            <th> @Html.DisplayNameFor(model = > model.First().Name) </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Gender)
            </th>
            <th> @Html.DisplayNameFor(model = > model.First().Subjects) </th>
        </tr>


        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="3"> Records not found </td>
            </tr>
        }
        else {

            foreach (var item in Model)
            {
                <tr>
                    <td> @Html.DisplayFor(modelItem = > item.Name) < /td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gender)
                    </td>
                    <td> @Html.DisplayFor(modelItem = > item.Subjects) < /td>
                </tr>
            }
        }
    </table>

    @Html.PagedListPager(Model, pageNumber => Url.Action("Index", new { pageNumber, option = Request.QueryString["option"], search = Request.QueryString["search"]}))*@
